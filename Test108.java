/* =======================================
	■■■주민등록번호 유효성 검사■■■
 =======================================*/

// 주민등록번호 생성 프로그램
/*
○ 검증 공식
   ① 마지막 자리를 제외한 앞자리 수를 규칙에 맞게 곱한다.
     
	  123456 - 1234567(주민번호)
	  ******   ******  ---------------- 각 자릿수에 곱하기
	  234567 - 892345 (각 자리에 곱해질 수)  규칙

   ② 규칙에 맞게 곱셈 연산을 수행한 결과를 모두 더한다.
   
      EX) 750615 - 1862133
	      ******   ******
	      234567   892345
		  -------------------------
		   →14 + 15 + 0 + 30 + 6 + 35 + 8 + 72 + 12 + 6 + 4 + 15
		     ==217

   ③ 더해진 결과값을  11로 나누어 『나머지』를 취한다.   규칙
            19  → 몫
	  -------------
	  11 | 217
	       11
		   ---
		   107
		    99
			---
			 8   → 나머지   ........를 취하기
			 961004 103072 1
			 234567 892345


   ④ 11에서 나머지 8 을 뺀 결과값을 구한다.
      
	  11 - 8 → 3
	   
	  ※ ③의 처리 과정에서 나머지가 0인 경우 → 11 - 0 : 11
	  						나머지가 1인 경우 → 11 - 1 : 10

		 이를 다시 10으로 나누어 나머지를 취한다.	      11 → 1
		                                                     → 0


   ⑤ ④의 연산 결과가 주민번호를 구성하는 마지막 숫자와 일치하는지의 여부를 비교.

      일치 → 유효한 주민번호
	  불일치 → 잘못된 주민번호




*/   


// 실행 예)
// 주민번호 입력(XXXXXX-XXXXXXX) : 123456-12345678  → 입력 갯수 초과
// >> 입력 오류~!!!
// 계속하려면 아무 키나 누르세요...

// 주민번호 입력(XXXXXX-XXXXXXX) : 123456-123456  → 입력 갯수 미들
// >> 입력 오류~!!!
// 계속하려면 아무 키나 누르세요...

// 주민번호 입력(XXXXXX-XXXXXXX) : 989826-1234356  → 유효한 주민번호
// >> 정확한 주민번호~!!!
// 계속하려면 아무 키나 누르세요...

// 주민번호 입력(XXXXXX-XXXXXXX) : 989826-1234356  → 유효하지 않은 주민번호
// >> 잘못된 주민번호~!!!
// 계속하려면 아무 키나 누르세요...

// ※ 문제 해결을 위한 추가 팁~!!!
//    배열.length        → 배열의 길이 반환
//    문자열.length()    → 문자열의 길이 반환

//    문자열.substring(상수1, 상수2) → 문자열 추출(상수1 번째부터 <상수2  -1번째까지(인덱스는0부터))
//	                                    상수들이 문자의 범위를 벗어나면 컴파일 에러
//                                   → (상수1) 인경우  상수1번째부터 끝까지 추출

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class Test108
{
	public static void main(String[] args) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		// 주민번호의 각 자릿수에 곱하게 될 수
		int [] chk = {2, 3, 4, 5, 6, 7, 0, 8 ,9, 2, 3, 4, 5};
		//                              --
		//                              check

		int tot=0;


		System.out.printf("주민번호 입력(xxxxxx-xxxxxxx) : ");

		String k = br.readLine();

		if (k.length()!=14)
		{
			System.out.println(">> 입력 오류~!!!");
			return;  // 입력오류돼면 시마이
		}
		
			
		
		for (int i = 0;i<13 ;i++ )//
		{
			if (i==6)
			{
				continue ;
			}

			tot += chk[i]*Integer.parseInt(k.substring(i, (i+1)));
		}		

		// --------------- 여기까지 수행하면 ①과 ②를 모두 끝낸 상황이며
		//	               규칙에 맞게 곱셈 연산을 수행한 결과를 모두 더한 값은
		//                 변수 tot에 담겨있는 상황이 된다.

	

       
	   	int su = 11 - tot%11;

		// --------------- 여기까지 수행하면 ③ 과 ④ 를 모두 끝낸 상황
		//                 su 에 대한 연산 결과 두자리로 나올 경우
		//	               주민번호 마지막 자리의 숫자와 비교를 수행할 수 없는 상황

		su = su % 10;	 // su %= 10;
		
		
		if (su == Integer.parseInt(k.substring(13)))
		{
			System.out.println();
			System.out.println(">> 유효한 주민등록번호입니다." );
		}
		else
		{
			System.out.println();
			System.out.println(">> 유효하지 않은 주민등록번호입니다." );
		}
	
	}
}

// 실행 결과

/*
주민번호 입력(xxxxxx-xxxxxxx) : 961004-1030xxx

>> 유효한 주민등록번호입니다.
계속하려면 아무 키나 누르십시오 . . .
*/