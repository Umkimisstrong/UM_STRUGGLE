/*==================================
  ■■■ 정렬(sort) 알고리즘 ■■■
==================================*/

/*
○ 정렬
   : 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
   : 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
     → 보기 좋게... 검색하기 위함

○ 정렬의 종류
   : 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬,  . . . . .

데이터베이스를 치중하는 회사
정렬구문 오더바이?? 를 못쓰게한다.
리소스소모가 굉장히 심해져서
회사 서버가 느려지고 메모리 많이잡아먹음

// 선택 정렬(Selection Sort)

// 실행 예)
// Source Data : 52 42 12 62 60
// Sorted Data : 12 42 52 60 62		-- 오름차순 정렬하고싶음.. 어케할까?

// 기준항 / 비교항을 비교해서 기준항이 더 크면 둘의 자리를 바꾼다.
// (기준항 / 비교항을 비교하는 시퀀스)는 전체 배열 수의 -1번을 한다.


*/
public class Test109
{
	public static void main(String[] args)
	{
		int [] a = {52, 42, 12, 62, 60};
	
		

		System.out.print("Source Data :");
		/*
		for (int i = 0;i < a.length ;i++ )
		{
			System.out.printf("%4d", a[i]);
		}
		System.out.println();
		*/


		// 향상된 for 문(foreach 구문)
		for (/*(←요소→)*/ int k : a /*(←자료구조→)*/ )
			System.out.printf("%4d", k);
		System.out.println();




		// Selection Sort

		for (int i = 0;i <a.length-1  ;i++ )  // (비교기준 데이터)  -- (0     1     2  3)
		{ 
			for (int j = i+1;j < a.length ;j++ )  // (비교대상데이터) -(1234  234   34 4) 
			{
				if (a[i]>a[j])   // 기준값이 비교값보다 크면
				{
					a[i] = a[i]^a[j];							// 자리 바꾸기
					a[j] = a[j]^a[i];
					a[i] = a[i]^a[j];
				}
			}
		}


		System.out.print("Sorted Data :");
		for (int n : a)
			System.out.printf("%4d", n);
		System.out.println();
		/*
		52 42 12 62 60
		-- --
		 크기비교
		42 52 12 62 60
		--    --
		 크기비교
		12 52 42 62 60
		--       --
		 크기비교
 		12 52 42 62 60
		--          --
        ===================1회전

		12 52 42 62 60
		   -- --
		12 42 52 62 60
		   --    --
		12 42 52 62 60
		   --       --
		===================2회전

		12 42 52 62 60
			  -- --
		12 42 52 62 60
		      --    --
		===================3회전
		12 42 52 62 60
		         -- --
		12 42 52 60 62
		===================3회전





		*/
	}
}

// 실행 결과

/*
Source Data :  52  42  12  62  60
Sorted Data :  12  42  52  60  62
계속하려면 아무 키나 누르십시오 . . .
*/